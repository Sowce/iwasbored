{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","position","x","y","lastBorder","animationDelay","konami","fillColor","draw","_this2","border","filter","Math","floor","random","document","documentElement","clientWidth","clientHeight","setState","randomColor","setTimeout","react_default","a","createElement","style","containerStyle","getImageStyle","version","width","height","fill","viewBox","preserveAspectRatio","transform","stroke","d","Konami_default","value","onChange","handleChange","bind","e","target","round","window","innerHeight","concat","toString","background","left","top","transition","transitionTimingFunction","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOAuIeA,qBAlId,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACZC,SAAU,CAAEC,EAAG,EAAGC,EAAG,GACrBC,WAAY,EACZC,eAAgB,IAChBC,QAAQ,EACRC,UAAW,WAPMd,mFAYlBG,KAAKY,sCAGC,IAAAC,EAAAb,KAIFK,EAAW,CACdC,EAAG,EACHC,EAAG,GAEAC,EAAaR,KAAKI,MAAMI,WAGxBM,EAFU,CAAC,EAAG,EAAG,EAAG,GAAGC,OAAO,SAAAD,GAAM,OAAIA,IAAWN,IAC7CQ,KAAKC,MAAsB,EAAhBD,KAAKE,WAE1B,OAAQJ,GACP,KAAK,EACL,QACCT,EAASC,EAAIU,KAAKC,MACjBD,KAAKE,UAAYC,SAASC,gBAAgBC,YAf/B,MAiBZhB,EAASE,GAAI,GACb,MACD,KAAK,EACJF,EAASC,EAAIa,SAASC,gBAAgBC,YApB1B,IAqBZhB,EAASE,EAAIS,KAAKC,MACjBD,KAAKE,UAAYC,SAASC,gBAAgBE,aArB/B,MAuBZ,MACD,KAAK,EACJjB,EAASC,EAAIU,KAAKC,MACjBD,KAAKE,UAAYC,SAASC,gBAAgBC,YA3B/B,MA6BZhB,EAASE,EAAIY,SAASC,gBAAgBE,aA5B1B,IA6BZ,MACD,KAAK,EACJjB,EAASC,EAAI,EACbD,EAASE,EAAIS,KAAKC,MACjBD,KAAKE,UAAYC,SAASC,gBAAgBE,aAjC/B,MAqCdtB,KAAKuB,SAAS,CACblB,WACAG,WAAYM,EACZH,UAAWX,KAAKwB,gBAEjBC,WAAW,kBAAMZ,EAAKD,QAAQZ,KAAKI,MAAMK,iDAIzC,OACCiB,EAAAC,EAAAC,cAAA,OAAKC,MAAO7B,KAAK8B,kBAChBJ,EAAAC,EAAAC,cAAA,OACCC,MAAO7B,KAAK+B,gBACZC,QAAQ,MACRC,MAAM,eACNC,OAAO,eACPC,KAAMnC,KAAKwB,cACXY,QAAQ,4BACRC,oBAAoB,iBAEpBX,EAAAC,EAAAC,cAAA,KACCU,UAAU,2DACVC,OAAO,QAEPb,EAAAC,EAAAC,cAAA,QAAMY,EAAE,igCACRd,EAAAC,EAAAC,cAAA,QAAMY,EAAE,q7BACRd,EAAAC,EAAAC,cAAA,QAAMY,EAAE,6EACRd,EAAAC,EAAAC,cAAA,QAAMY,EAAE,gLAGVd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,KACCD,EAAAC,EAAAC,cAAA,SACCc,MAAO1C,KAAKI,MAAMK,eAClBkC,SAAU3C,KAAK4C,aAAaC,KAAK7C,+CAOzB8C,GACZ9C,KAAKuB,SAAS,CAAEd,eAAgBqC,EAAEC,OAAOL,iDAIzC,OAAO1B,KAAKgC,MAAMC,OAAOC,YAAc,yCAIvC,UAAAC,OAAWnC,KAAKgC,MAAsB,SAAhBhC,KAAKE,UAAqBkC,SAAS,8CAIzD,MAAO,CACNnB,MAAO,QACPC,OAAQ,QACRmB,WAAY,mDAKb,MAAO,CACNC,KAAMtD,KAAKI,MAAMC,SAASC,EAC1BiD,IAAKvD,KAAKI,MAAMC,SAASE,EACzB2B,OAAQ,QACRD,MAAO,QACP5B,SAAU,QACVmD,WAAU,QAAAL,OAAUnD,KAAKI,MAAMK,eAArB,YAAA0C,OACTnD,KAAKI,MAAMK,eADF,MAGVgD,yBAA0B,SAC1BtB,KAAI,GAAAgB,OAAKnD,KAAKI,MAAMO,UAAhB,uBA9HW+C,cCQEC,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAAS9C,SAAS+C,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.50a678aa.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Konami from \"react-konami-code\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tposition: { x: 0, y: 0 },\n\t\t\tlastBorder: 0,\n\t\t\tanimationDelay: 20000,\n\t\t\tkonami: false,\n\t\t\tfillColor: \"#ffffff\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.draw();\n\t}\n\n\tdraw() {\n\t\tlet xOffset = 163;\n\t\tlet bOffset = 113;\n\t\tlet tOffset = 42;\n\t\tlet position = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t\tlet lastBorder = this.state.lastBorder;\n\t\tlet borders = [0, 1, 2, 3].filter(border => border !== lastBorder);\n\t\tlet rng = Math.floor(Math.random() * 2);\n\t\tlet border = borders[rng];\n\t\tswitch (border) {\n\t\t\tcase 0:\n\t\t\tdefault:\n\t\t\t\tposition.x = Math.floor(\n\t\t\t\t\tMath.random() * (document.documentElement.clientWidth - xOffset)\n\t\t\t\t);\n\t\t\t\tposition.y = 0 - tOffset;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tposition.x = document.documentElement.clientWidth - xOffset;\n\t\t\t\tposition.y = Math.floor(\n\t\t\t\t\tMath.random() * (document.documentElement.clientHeight - bOffset)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tposition.x = Math.floor(\n\t\t\t\t\tMath.random() * (document.documentElement.clientWidth - xOffset)\n\t\t\t\t);\n\t\t\t\tposition.y = document.documentElement.clientHeight - bOffset;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tposition.x = 0;\n\t\t\t\tposition.y = Math.floor(\n\t\t\t\t\tMath.random() * (document.documentElement.clientHeight - bOffset)\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.setState({\n\t\t\tposition,\n\t\t\tlastBorder: border,\n\t\t\tfillColor: this.randomColor()\n\t\t});\n\t\tsetTimeout(() => this.draw(), this.state.animationDelay);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={this.containerStyle()}>\n\t\t\t\t<svg\n\t\t\t\t\tstyle={this.getImageStyle()}\n\t\t\t\t\tversion=\"1.0\"\n\t\t\t\t\twidth=\"300.000000pt\"\n\t\t\t\t\theight=\"168.000000pt\"\n\t\t\t\t\tfill={this.randomColor()}\n\t\t\t\t\tviewBox=\"0 0 300.000000 168.000000\"\n\t\t\t\t\tpreserveAspectRatio=\"xMidYMid meet\"\n\t\t\t\t>\n\t\t\t\t\t<g\n\t\t\t\t\t\ttransform=\"translate(0.000000,168.000000) scale(0.100000,-0.100000)\"\n\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<path d=\"M1914 1316 c-82 -108 -152 -196 -155 -196 -4 0 -35 86 -69 191 -51 158 -64 189 -75 178 -7 -8 -74 -95 -149 -194 -76 -99 -141 -181 -145 -183 -5 -1 -37 84 -73 190 l-65 193 -349 3 c-387 3 -451 -4 -571 -58 -86 -39 -172 -123 -209 -203 -25 -54 -29 -74 -29 -154 0 -85 2 -94 30 -134 41 -59 100 -101 171 -125 50 -16 88 -19 249 -19 221 0 257 7 353 69 130 84 196 181 210 308 l7 63 95 -262 c52 -145 98 -263 101 -263 4 0 73 86 154 191 l148 191 18 -54 c67 -190 115 -318 121 -318 4 0 73 87 155 193 l148 192 7 -54 c11 -93 84 -174 193 -212 117 -41 458 -37 550 7 18 8 66 46 107 84 103 95 133 159 133 287 0 85 -2 94 -30 134 -41 58 -90 95 -160 121 -57 21 -78 23 -391 26 l-331 3 -149 -195z m775 61 c39 -19 74 -98 74 -165 0 -102 -55 -191 -145 -236 -48 -24 -62 -26 -180 -26 l-128 0 -44 43 c-55 53 -71 104 -56 174 23 101 85 170 183 204 63 22 258 26 296 6z m-1937 -40 c57 -44 72 -74 72 -139 -1 -76 -43 -159 -102 -205 -62 -47 -127 -63 -257 -63 -108 0 -113 1 -153 30 -54 39 -76 82 -75 148 0 66 42 153 95 195 65 52 127 67 263 65 114 -3 122 -4 157 -31z\" />\n\t\t\t\t\t\t<path d=\"M1055 644 c-424 -32 -716 -89 -785 -154 -36 -34 -37 -44 -5 -74 114 -106 690 -175 1365 -163 670 12 1105 90 1118 200 3 21 -4 31 -30 47 -80 49 -281 95 -558 126 -109 12 -258 17 -600 19 -250 1 -477 1 -505 -1z m-164 -149 c13 -30 27 -55 30 -55 4 0 17 25 29 55 18 45 27 55 46 55 13 0 24 -5 24 -10 0 -19 -89 -200 -98 -200 -9 0 -102 183 -102 201 0 5 11 9 24 9 19 0 28 -10 47 -55z m317 -47 c-3 -98 -4 -103 -25 -106 -23 -3 -23 -2 -23 102 l0 106 25 0 26 0 -3 -102z m323 64 c39 -43 39 -90 1 -133 -25 -28 -35 -32 -100 -37 l-72 -5 0 108 0 107 71 -4 c65 -3 74 -6 100 -36z m319 18 c0 -17 -7 -20 -50 -20 -43 0 -50 -3 -50 -20 0 -17 7 -20 50 -20 43 0 50 -3 50 -20 0 -17 -7 -20 -50 -20 -47 0 -50 -2 -50 -25 0 -23 3 -25 50 -25 44 0 50 -3 50 -20 0 -19 -5 -21 -72 -18 l-73 3 -3 89 c-2 49 -1 95 2 103 4 9 26 13 76 13 63 0 70 -2 70 -20z m342 -19 c38 -43 38 -90 -1 -133 -27 -30 -35 -33 -86 -33 -51 0 -59 3 -86 33 -36 40 -38 87 -8 126 29 37 55 47 109 42 34 -3 51 -11 72 -35z\" />\n\t\t\t\t\t\t<path d=\"M1410 445 l0 -65 30 0 c37 0 70 31 70 65 0 34 -33 65 -70 65 l-30 0 0 -65z\" />\n\t\t\t\t\t\t<path d=\"M2060 490 c-11 -11 -20 -31 -20 -45 0 -14 9 -34 20 -45 11 -11 31 -20 45 -20 14 0 34 9 45 20 11 11 20 31 20 45 0 14 -9 34 -20 45 -11 11 -31 20 -45 20 -14 0 -34 -9 -45 -20z\" />\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t\t<Konami>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.animationDelay}\n\t\t\t\t\t\tonChange={this.handleChange.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t</Konami>\n\t\t\t</div>\n\t\t);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ animationDelay: e.target.value });\n\t}\n\n\tgetImageHeight() {\n\t\treturn Math.round(window.innerHeight / 2);\n\t}\n\n\trandomColor() {\n\t\treturn `#${Math.round(Math.random() * 16777215).toString(16)}`;\n\t}\n\n\tcontainerStyle() {\n\t\treturn {\n\t\t\twidth: \"100vw\",\n\t\t\theight: \"100vh\",\n\t\t\tbackground: \"#171717\"\n\t\t};\n\t}\n\n\tgetImageStyle() {\n\t\treturn {\n\t\t\tleft: this.state.position.x,\n\t\t\ttop: this.state.position.y,\n\t\t\theight: \"160px\",\n\t\t\twidth: \"160px\",\n\t\t\tposition: \"fixed\",\n\t\t\ttransition: `left ${this.state.animationDelay}ms, top ${\n\t\t\t\tthis.state.animationDelay\n\t\t\t}ms`,\n\t\t\ttransitionTimingFunction: \"linear\",\n\t\t\tfill: `${this.state.fillColor} !important`\n\t\t};\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}